// <auto-generated />
using System;
using Mactan.Tricycle.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mactan.Tricycle.DAL.Migrations
{
    [DbContext(typeof(MactanContext))]
    [Migration("20190327100723_MactanDrivers")]
    partial class MactanDrivers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssetConfiguration");

                    b.Property<double?>("AssetCost");

                    b.Property<int>("AssetPartId");

                    b.Property<string>("AssetType")
                        .HasMaxLength(150);

                    b.Property<string>("ChassisNo")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("EngineNo")
                        .HasMaxLength(50);

                    b.Property<string>("FranchiseKey");

                    b.Property<DateTime>("FranchiseRenewalDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LLCSPNo");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100);

                    b.Property<string>("ORCRNo")
                        .HasMaxLength(20);

                    b.Property<int>("OwnerOrganizationId");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("VehicleRenewalDate");

                    b.HasKey("Id");

                    b.HasIndex("AssetPartId");

                    b.HasIndex("OwnerOrganizationId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.AssetDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssetId");

                    b.Property<int>("ContractMonth");

                    b.Property<string>("ContractType")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTime>("DateFinishedActual");

                    b.Property<DateTime>("DateFinishedExpected");

                    b.Property<DateTime>("DateStarted");

                    b.Property<int>("DriverId");

                    b.Property<bool>("IsActive");

                    b.Property<double>("Rental");

                    b.Property<double>("RentalConfig");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("DriverId");

                    b.ToTable("AssetDrivers");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.AuditHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AuditHistoryTime");

                    b.Property<string>("ColumnName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("MTUserId");

                    b.Property<string>("NewValue")
                        .HasMaxLength(200);

                    b.Property<string>("OldValue")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("TableName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("MTUserId");

                    b.ToTable("AuditHistories");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssetDriverId");

                    b.Property<double>("ChargeAmount");

                    b.Property<DateTime>("ChargeDate");

                    b.Property<int>("ChargeTypeId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("DriverId");

                    b.Property<bool>("IsDeleted");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("TransactionTypeId");

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("AssetDriverId");

                    b.HasIndex("ChargeTypeId");

                    b.HasIndex("DriverId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.ChargeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("ChargeTypes");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DriverLicenseExpiry");

                    b.Property<string>("DriversLicense")
                        .HasMaxLength(50);

                    b.Property<string>("FacebookAccount")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(10);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.MTUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("MTUsers");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.OwnerOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("OwnerOrganizationName")
                        .HasMaxLength(100);

                    b.Property<string>("RepresentAddress")
                        .HasMaxLength(200);

                    b.Property<string>("RepresentContactNo")
                        .HasMaxLength(20);

                    b.Property<string>("RepresentFirstName")
                        .HasMaxLength(50);

                    b.Property<string>("RepresentLastName")
                        .HasMaxLength(50);

                    b.Property<string>("RepresentMiddleName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("OwnerOrganizations");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.PaymentTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int>("ChargeId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MTUserId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("TransactionDate");

                    b.Property<int>("TransactionTypeId");

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("ChargeId");

                    b.HasIndex("MTUserId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.SystemConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Key")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Value")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Updated");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.Asset", b =>
                {
                    b.HasOne("Mactan.Tricycle.DAL.Models.Asset", "AssetPart")
                        .WithMany("Assets")
                        .HasForeignKey("AssetPartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.OwnerOrganization", "OwnerOrganization")
                        .WithMany("Assets")
                        .HasForeignKey("OwnerOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.AssetDriver", b =>
                {
                    b.HasOne("Mactan.Tricycle.DAL.Models.Asset", "Asset")
                        .WithMany("AssetDrivers")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.Driver", "Driver")
                        .WithMany("AssetDrivers")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.AuditHistory", b =>
                {
                    b.HasOne("Mactan.Tricycle.DAL.Models.MTUser", "MTUSer")
                        .WithMany("AuditHistories")
                        .HasForeignKey("MTUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.Charge", b =>
                {
                    b.HasOne("Mactan.Tricycle.DAL.Models.AssetDriver", "AssetDriver")
                        .WithMany("Charges")
                        .HasForeignKey("AssetDriverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.ChargeType", "ChargeType")
                        .WithMany("Charges")
                        .HasForeignKey("ChargeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.Driver", "Driver")
                        .WithMany("Charges")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.TransactionType", "TransactionType")
                        .WithMany("Charges")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mactan.Tricycle.DAL.Models.PaymentTransaction", b =>
                {
                    b.HasOne("Mactan.Tricycle.DAL.Models.Charge", "Charge")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.MTUser", "MTUser")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("MTUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mactan.Tricycle.DAL.Models.TransactionType", "TransactionType")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
